import numpy as np

TRANSOP_TEST_SETTINGS = [
    (3, (5, 5), np.dtype("float32")),
    (3, (5, 5), np.dtype("complex64")),
]
TRANSOP_EXPECTED_LEFT = [
    ([[25375., 25900., 26425., 26950., 27475.],
      [25900., 26440., 26980., 27520., 28060.],
      [26425., 26980., 27535., 28090., 28645.],
      [26950., 27520., 28090., 28660., 29230.],
      [27475., 28060., 28645., 29230., 29815.]],
     [[1635000., 1670250., 1705500., 1740750., 1776000.],
      [1667250., 1703400., 1739550., 1775700., 1811850.],
      [1699500., 1736550., 1773600., 1810650., 1847700.],
      [1731750., 1769700., 1807650., 1845600., 1883550.],
      [1764000., 1802850., 1841700., 1880550., 1919400.]]
     ),
    ([[50750. + 0.j, 51800. + 0.j, 52850. + 0.j, 53900. + 0.j, 54950. + 0.j],
      [51800. + 0.j, 52880. + 0.j, 53960. + 0.j, 55040. + 0.j, 56120. + 0.j],
      [52850. + 0.j, 53960. + 0.j, 55070. + 0.j, 56180. + 0.j, 57290. + 0.j],
      [53900. + 0.j, 55040. + 0.j, 56180. + 0.j, 57320. + 0.j, 58460. + 0.j],
      [54950. + 0.j, 56120. + 0.j, 57290. + 0.j, 58460. + 0.j, 59630. + 0.j]],
     [[3270000. + 3270000.j, 3340500. + 3340500.j, 3411000. + 3411000.j, 3481500. + 3481500.j, 3552000. + 3552000.j],
      [3334500. + 3334500.j, 3406800. + 3406800.j, 3479100. + 3479100.j, 3551400. + 3551400.j, 3623700. + 3623700.j],
      [3399000. + 3399000.j, 3473100. + 3473100.j, 3547200. + 3547200.j, 3621300. + 3621300.j, 3695400. + 3695400.j],
      [3463500. + 3463500.j, 3539400. + 3539400.j, 3615300. + 3615300.j, 3691200. + 3691200.j, 3767100. + 3767100.j],
      [3528000. + 3528000.j, 3605700. + 3605700.j, 3683400. + 3683400.j, 3761100. + 3761100.j, 3838800. + 3838800.j]]
     )
]
TRANSOP_EXPECTED_RIGHT = [
    ([[17215., 19240., 21265., 23290., 25315.],
      [19240., 21640., 24040., 26440., 28840.],
      [21265., 24040., 26815., 29590., 32365.],
      [23290., 26440., 29590., 32740., 35890.],
      [25315., 28840., 32365., 35890., 39415.]],
     [[1055400., 1180650., 1305900., 1431150., 1556400.],
      [1177650., 1325400., 1473150., 1620900., 1768650.],
      [1299900., 1470150., 1640400., 1810650., 1980900.],
      [1422150., 1614900., 1807650., 2000400., 2193150.],
      [1544400., 1759650., 1974900., 2190150., 2405400.]]
     ),
    ([[34430. + 0.j, 38480. + 0.j, 42530. + 0.j, 46580. + 0.j, 50630. + 0.j],
      [38480. + 0.j, 43280. + 0.j, 48080. + 0.j, 52880. + 0.j, 57680. + 0.j],
      [42530. + 0.j, 48080. + 0.j, 53630. + 0.j, 59180. + 0.j, 64730. + 0.j],
      [46580. + 0.j, 52880. + 0.j, 59180. + 0.j, 65480. + 0.j, 71780. + 0.j],
      [50630. + 0.j, 57680. + 0.j, 64730. + 0.j, 71780. + 0.j, 78830. + 0.j]],
     [[2110800. + 2110800.j, 2361300. + 2361300.j, 2611800. + 2611800.j, 2862300. + 2862300.j, 3112800. + 3112800.j],
      [2355300. + 2355300.j, 2650800. + 2650800.j, 2946300. + 2946300.j, 3241800. + 3241800.j, 3537300. + 3537300.j],
      [2599800. + 2599800.j, 2940300. + 2940300.j, 3280800. + 3280800.j, 3621300. + 3621300.j, 3961800. + 3961800.j],
      [2844300. + 2844300.j, 3229800. + 3229800.j, 3615300. + 3615300.j, 4000800. + 4000800.j, 4386300. + 4386300.j],
      [3088800. + 3088800.j, 3519300. + 3519300.j, 3949800. + 3949800.j, 4380300. + 4380300.j, 4810800. + 4810800.j]]
     )
]
